generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  fullname  String?
  bio       String?
  image     String?
  email     String    @unique
  hashedPassword  String
  hashedRefreshToken String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  post      Post[]
  comments  Comment[]
  likes     Like[]
}

model Post {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  text      String
  videoUrl  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  postId    Int       @map("post_id")
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  text      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
}

model Like {
  id        Int       @id @default(autoincrement())
  postId    Int       @map("post_id")
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@unique([userId, postId])
}
